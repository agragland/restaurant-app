{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\NightKing\\\\Documents\\\\00SCHOOL\\\\Spring 2021\\\\CSCE 3444\\\\Large Group Project\\\\react-practice\\\\flappyBird\\\\flappy-bird\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Taco from \"./components/Taco\";\nimport Obstacles from \"./components/obstacles\";\nexport default function App() {\n  var screenWidth = window.innerWidth;\n  var screenHeight = window.innerHeight;\n  var tacoLeft = screenWidth / 2;\n\n  var _useState = useState(screenHeight / 2),\n      _useState2 = _slicedToArray(_useState, 2),\n      tacoBottom = _useState2[0],\n      setTacoBottom = _useState2[1];\n\n  var _useState3 = useState(screenWidth),\n      _useState4 = _slicedToArray(_useState3, 2),\n      obstaclesLeft = _useState4[0],\n      setObstaclesLeft = _useState4[1];\n\n  var _useState5 = useState(screenWidth + screenWidth / 2),\n      _useState6 = _slicedToArray(_useState5, 2),\n      obstaclesLeftTwo = _useState6[0],\n      setObstaclesLeftTwo = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      obstaclesNegHeight = _useState8[0],\n      setObstaclesNegHeight = _useState8[1];\n\n  var obstacleWidth = 60;\n  var obstacleHeight = 300;\n  var gap = 180;\n  var obstacleWidthTwo = 60;\n  var obstacleHeightTwo = 300;\n  var gapTwo = 180;\n  var gameTimerId;\n  var obstaclesLeftTimerId;\n  var obstaclesLeftTimerIdTwo;\n  useEffect(function () {\n    if (tacoBottom > 0) {\n      gameTimerId = setInterval(function () {\n        setTacoBottom(function (tacoBottom) {\n          return tacoBottom - 3;\n        });\n      }, 30);\n      return function () {\n        clearInterval(gameTimerId);\n      };\n    }\n  }, [tacoBottom]);\n  console.log(tacoBottom);\n  useEffect(function () {\n    if (obstaclesLeft > -obstacleWidth) {\n      obstaclesLeftTimerId = setInterval(function () {\n        setObstaclesLeft(function (obstaclesLeft) {\n          return obstaclesLeft - 5;\n        });\n      }, 30);\n      return function () {\n        clearInterval(obstaclesLeftTimerId);\n      };\n    } else {\n      setObstaclesLeft(screenWidth);\n    }\n  }, [obstaclesLeft]);\n  useEffect(function () {\n    if (obstaclesLeftTwo > -obstacleWidth) {\n      obstaclesLeftTimerIdTwo = setInterval(function () {\n        setObstaclesLeftTwo(function (obstaclesLeftTwo) {\n          return obstaclesLeftTwo - 5;\n        });\n      }, 30);\n      return function () {\n        clearInterval(obstaclesLeftTimerIdTwo);\n      };\n    } else {\n      setObstaclesLeftTwo(screenWidth);\n    }\n  }, [obstaclesLeftTwo]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, React.createElement(Taco, {\n    tacoBottom: tacoBottom,\n    tacoLeft: tacoLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), React.createElement(Obstacles, {\n    color: '#F5853F',\n    obstaclesLeft: obstaclesLeft,\n    obstacleWidth: obstacleWidth,\n    obstacleHeight: obstacleHeight,\n    gap: gap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), React.createElement(Obstacles, {\n    color: '#0091Ad',\n    obstaclesLeft: obstaclesLeftTwo,\n    obstacleWidth: obstacleWidthTwo,\n    obstacleHeight: obstacleHeightTwo,\n    gap: gapTwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/NightKing/Documents/00SCHOOL/Spring 2021/CSCE 3444/Large Group Project/react-practice/flappyBird/flappy-bird/App.js"],"names":["React","useEffect","useState","Taco","Obstacles","App","screenWidth","window","innerWidth","screenHeight","innerHeight","tacoLeft","tacoBottom","setTacoBottom","obstaclesLeft","setObstaclesLeft","obstaclesLeftTwo","setObstaclesLeftTwo","obstaclesNegHeight","setObstaclesNegHeight","obstacleWidth","obstacleHeight","gap","obstacleWidthTwo","obstacleHeightTwo","gapTwo","gameTimerId","obstaclesLeftTimerId","obstaclesLeftTimerIdTwo","setInterval","clearInterval","console","log","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from 'react';\nimport { StyleSheet, Text, View, Dimensions } from 'react-native';\n\nimport Taco from './components/Taco';\nimport Obstacles from './components/obstacles';\n\nexport default function App() {\n  //get screen width and height\n  const screenWidth = window.innerWidth\n  const screenHeight = window.innerHeight\n  const tacoLeft = screenWidth / 2\n  const [tacoBottom, setTacoBottom] = useState(screenHeight / 2)\n  const [obstaclesLeft, setObstaclesLeft] = useState(screenWidth)\n  const [obstaclesLeftTwo, setObstaclesLeftTwo] = useState(screenWidth + screenWidth/2)\n  const [obstaclesNegHeight, setObstaclesNegHeight] = useState(0)\n\n  const obstacleWidth = 60\n  const obstacleHeight = 300\n  const gap = 180\n  const obstacleWidthTwo = 60\n  const obstacleHeightTwo = 300\n  const gapTwo = 180\n\n  let gameTimerId \n  let obstaclesLeftTimerId\n  let obstaclesLeftTimerIdTwo\n\n  //start taco falling\n  useEffect(() => {\n    if(tacoBottom > 0){\n      gameTimerId = setInterval(() =>{\n        setTacoBottom(tacoBottom => tacoBottom - 3)\n      }, 30)\n\n      return()=>{\n        clearInterval(gameTimerId)\n      }\n    }\n  }, [tacoBottom])\n  console.log(tacoBottom)\n\n//start first obstacles\n  useEffect(() => {\n    if(obstaclesLeft > -obstacleWidth){\n      obstaclesLeftTimerId = setInterval(() => {\n        setObstaclesLeft(obstaclesLeft => obstaclesLeft - 5)\n      }, 30)\n      \n      return() => {\n        clearInterval(obstaclesLeftTimerId)\n      }\n    } else {\n      setObstaclesLeft(screenWidth)\n    }  \n  }, [obstaclesLeft])\n\n  //start second obstacles\n  useEffect(() => {\n    if(obstaclesLeftTwo > -obstacleWidth){\n      obstaclesLeftTimerIdTwo = setInterval(() => {\n        setObstaclesLeftTwo(obstaclesLeftTwo => obstaclesLeftTwo - 5)\n      }, 30)\n      \n      return() => {\n        clearInterval(obstaclesLeftTimerIdTwo)\n      }\n    } else {\n      setObstaclesLeftTwo(screenWidth)\n    }  \n  }, [obstaclesLeftTwo])\n\n\n\n  return (\n    <View style={styles.container}>\n      <Taco \n        tacoBottom={tacoBottom}\n        tacoLeft={tacoLeft}\n      />\n      <Obstacles\n      color={'#F5853F'}\n      obstaclesLeft={obstaclesLeft}\n      obstacleWidth={obstacleWidth}\n      obstacleHeight={obstacleHeight}\n      gap={gap}\n      />\n      <Obstacles\n      color={'#0091Ad'}\n      obstaclesLeft={obstaclesLeftTwo}\n      obstacleWidth={obstacleWidthTwo}\n      obstacleHeight={obstacleHeightTwo}\n      gap={gapTwo}\n      />\n    </View>\n    \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}