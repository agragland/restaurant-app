{"version":3,"sources":["api/index.js","components/MenuList.jsx","components/MenuInsert.jsx","components/pages/Pages.js","components/Modal.js","components/pages/LobbyView.js","components/pages/KitchenView.js","components/pages/Clock.js","components/pages/ManagerView/tabs/ChangeLog.js","components/pages/ManagerView/tabs/ComsumerSettings.js","components/pages/ManagerView/tabs/DailySalesReport.js","components/pages/ManagerView/tabs/LobbyView.js","components/pages/ManagerView/Navbar.js","components/pages/ManagerView/ManagerView.js","components/pages/CustomerView/tabs/PaymentView.js","components/pages/CustomerView/tabs/OrderView.js","components/pages/CustomerView/Navbar.js","components/pages/CustomerView/tabs/MenuView.js","components/pages/CustomerView/CustomerView.js","components/Navbar/Navbar.js","app/index.js","index.js"],"names":["api","axios","create","baseURL","apis","insertItem","payload","post","getAllItems","get","insertCustomer","getItemById","id","createOrder","getAllOrders","getOrder","updateOrder","put","deleteOrder","delete","updateTable","table_num","getTables","getTableByNum","Item","Component","name","category","price","StaffPages","title","url","cName","Modal","show","children","className","available","status","orders","drinks","assistance","globalTables","TableView","useState","tables","setTables","tableNum","setTableNum","table","setTable","useEffect","handleGetTables","intervalId","setInterval","clearInterval","a","tempTables","i","then","db_tables","curr_tables","data","console","log","map","refills","handleGetOrders","curr_orders","order","handleUpdateOrder","_id","handleUpdateTable","handleSetTableVals","target","dataset","index","tableShow","setTableShow","handleTableClick","prev","orderShow","setOrderShow","handleOrderClick","handleRemoveClick","orderindex","order_items","itemindex","commped","subtotal","tax","total","Needs","length","drink","tableColor","setColor","curTable","undefined","curStatus","setNeeds","data-index","onClick","style","background","disabled","tempOrders","splice","tempTable","orderIndex","item","itemIndex","data-orderindex","data-itemindex","KitchenView","orderQueue","setOrderQueue","actives","setActives","itemWorking","setItemWorking","tempActives","tempQueue","tempWorking","tempItemWorking","clickToActive","value","concat","temp","clickToReady","getTime","creationTime","time","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","createdAt","activesIndex","comments","Time","format","ticking","ChangeLog","ConsumerSettings","dictionary","menu_id","amountPurchased","itemProfit","DSR","DailySalesReport","dailySales","dict","totalProfit","setProfit","curDS","profit","dailySale","LobbyVisual","transform","NavBar","class","to","ManagerView","exact","path","component","order_id","paymentReady","PaymentItem","comp","PaymentView","props","componentDidMount","setState","modal_2","catch","err","state","cardModal","cardPaymentHandler","tipModalHandler","tipHandler","type","onChange","handleCustomTipValue","toFixed","freeDessertHandler","freeDessert","dessertRandomizer","Math","random","tipPerc","tip","res","event","prevState","paymentStatusHandler","item_test","this","React","items","getTableNum","handleAddToOrder","comment","push","OrderItem","OrderView","item_info","handleRemoveFromOrder","arr","comms","indexOf","OrderStatusHandler","placeOrderHandler","EditRemoveButtons","final_payload","window","alert","handleGetTable","setDrinks","showModalRefills","setShowModalRefills","disableRefills","setDisableRefills","setRefills","handleClickRefill","showModalTableNums","setShowModalTableNums","handleClickTable","handleClickNum","num","dbItem","new_table","menu_items","customItem","showCustomItem","ingredients","ingredient","e","DropMenu","MenuView","handleGetItems","showEntrees","setShowEntrees","showAppetizers","setShowAppetizers","showSides","setShowSides","showKids","setShowKids","showDesserts","setShowDesserts","showDrinks","setShowDrinks","CustomerView","Navbar","variable","clicked","setClicked","setComponent","showModal","setShowModal","employees","setEmployees","emp_id","employee","setEmployee","error","setError","handleGetLobby","getEmployees","workers","all_employees","tempType","worker","role","handleGetKitchen","handleClick","preventDefault","view","handleModal","onSubmit","details","htmlFor","placeholder","href","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e95cc8b.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst api = axios.create({\n    baseURL: 'http://localhost:3000/api',\n})\n\nexport const insertItem = payload => api.post(`/item`, payload)\nexport const getAllItems = () => api.get(`/items`)\nexport const getItemById = id => api.get(`/item/${id}`)\nexport const insertCustomer = payload => api.post(`/customer`, payload)\nexport const createOrder = payload => api.post(`/order`,payload)\nexport const getAllOrders = () => api.get(`/orders`)\nexport const updateOrder = (id, payload) => api.put(`/order/${id}`, payload)\nexport const deleteOrder = id => api.delete(`/order/${id}`)\nexport const getOrder = id => api.get(`/order/${id}`)\n//export const updateMovieById = (id, payload) => api.put(`/movie/${id}`, payload)\n//export const deleteMovieById = id => api.delete(`/movie/${id}`)\n//export const getMovieById = id => api.get(`/movie/${id}`)\nexport const updateTable = (table_num, payload) => api.put(`/table/${table_num}`,payload)\nexport const getTables = () => api.get(`/tables`)\nexport const getTableByNum = (table_num) => api.get(`/table/${table_num}`)\n\nconst apis = {\n    insertItem,\n    getAllItems,\n    insertCustomer,\n    getItemById,\n    createOrder,\n    getAllOrders,\n    getOrder,\n    updateOrder,\n    deleteOrder,\n    updateTable,\n    getTables,\n    getTableByNum,\n}\n\nexport default apis","import React, { Component } from 'react'\nimport api from '../api'\n\n\nconst Item = ({name, category, price,}) => (\n    <div>\n        <div>\n            <p>{name}</p>\n            <p>{category}</p>\n            <p>{price}</p>\n        </div>\n    </div>\n)\n\n\nclass MenuList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n        }\n    }\n\n    handleGetItems = async () => {\n        await api.getAllItems().then(items => {\n            this.setState({\n                items: items.data.data\n            })\n        })\n    }\n\n    render()  {\n\n        return(\n            <>\n                <button onClick={this.handleGetItems}>Click to get Items</button>\n                {\n                    this.state.items.map((item, index) => (\n                        <Item\n                            key={index}\n                            name={item.name}\n                            category={item.category}\n                            price={item.price}\n                        />\n                    ))\n                }\n            </>\n        )\n    }\n\n}\n\nexport default MenuList","import React, { Component } from 'react'\nimport api from '../api'\n\nclass MenuInsert extends Component {\n    constructor(props) {\n        super(props);\n\n        let item = {\n            name: '',\n            category: '',\n            ingredients: '',\n            price: '',\n            img: '',\n            isAvailable: '',\n        }\n    }\n\n    handleChangeInputName = async event => {\n        const name = event.target.value\n        this.item.name = name\n    }\n\n    handleChangeInputCategory = async event => {\n        const category = event.target.value\n        this.setState({category})\n    }\n\n    handleChangeInputIngredients = async event => {\n        const ingredients = event.target.value\n        this.setState({ingredients})\n    }\n\n    handleChangeInputPrice = async event => {\n        const price = event.target.value\n        this.setState({price})\n    }\n\n    handleChangeInputImage = async event => {\n        const img = event.target.value\n        this.setState({img})\n    }\n\n    handleChangeInputAvail = async event => {\n        const isAvailable = event.target.value\n        this.setState({isAvailable})\n    }\n\n    handleInsertItem = async () => {\n        const{ name, category, ingredients, price, img, isAvailable } = this.state\n        const arrIngredients = ingredients.split('/')\n        const payload = { name, category, ingredients: arrIngredients, price, img, isAvailable }\n\n\n        await api.insertItem(payload).then(res => {\n            window.alert(`Item inserted successfully`)\n            this.setState({\n                name: [],\n                category: '',\n                ingredients: '',\n                price: '',\n                img: '',\n                isAvailable: '',\n            })\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <form>\n                    <label>\n                        Name:\n                        <input type=\"text\" value={this.state.value} onChange={this.handleChangeInputName} />\n                    </label>\n                    <label>\n                        Category:\n                        <input type=\"text\" value={this.state.value} onChange={this.handleChangeInputCategory} />\n                    </label>\n                    <label>\n                        Ingredients:\n                        <input type=\"text\" value={this.state.value} onChange={this.handleChangeInputIngredients} />\n                    </label>\n                    <label>\n                        Price:\n                        <input type=\"text\" value={this.state.value} onChange={this.handleChangeInputPrice} />\n                    </label>\n                    <label>\n                        Image:\n                        <input type=\"text\" value={this.state.value} onChange={this.handleChangeInputImage} />\n                    </label>\n                    <label>\n                        Available?:\n                        <input type=\"text\" value={this.state.value} onChange={this.handleChangeInputAvail} />\n                    </label>\n                    <input type=\"button\" value=\"Submit\" onClick={this.handleInsertItem} />\n                </form>\n            </>\n\n        )\n    }\n\n\n\n}\n\nexport default MenuInsert","export const StaffPages = [\n    {\n        title: \"Lobby\",\n        url: \"#\",\n        cName: 'nav-links'\n    },\n    {\n        title: \"Kitchen\",\n        url: \"#\",\n        cName: 'nav-links'\n    },\n    {\n        title: \"Manager\",\n        url: \"#\",\n        cName: 'nav-links'\n    },\n    {\n        title: \"Customer\",\n        url: \"#\",\n        cName: 'nav-links'\n    }\n]","import \"./Modal.css\"\n\n//Uses custom-made modal, since there's a strange flashing that happens when changing bootstrap modals\nexport default function Modal({show, children}) {\n    if (!show)\n        return null;\n\n    return (\n        <div className=\"modal-background\">\n            <section className=\"modal-main\">\n                {children}\n            </section>\n        </div>\n    );\n}","import React, {useState, useEffect} from 'react';\nimport Modal from '../Modal';\nimport './LobbyView.css';\nimport api from \"../../api\";\n\nconst available = {status: \"Available\", orders: [[]], drinks: [], assistance: false}\n\n//temporary array for items\nconst globalTables = [\n    available, available, available, available, available, available, available, available, available, available,\n    available, available, available, available, available, available, available, available, available, available,\n]\n\nexport default function TableView() {\n    const [tables, setTables] = useState(globalTables)\n    const [tableNum, setTableNum] = useState(\"1\");  //the number of the table (1-20)\n    const [table, setTable] = useState({status: \"Available\", orders: [], drinks: [], assistance: false});\n\n    useEffect(() => {\n        handleGetTables()\n\n        const intervalId = setInterval(() => {\n            handleGetTables()\n        }, 10000);\n\n        return () => {\n            clearInterval(intervalId);\n        };\n    }, []);\n\n    const handleGetTables = async () => {\n        let tempTables = []\n        for(let i = 0; i < 20; i++)\n            tempTables = [...tempTables, {status: \"Available\", orders: [], drinks: [], assistance: false}]         //initializes array\n\n        await api.getTables().then(db_tables => {\n            const curr_tables = db_tables.data.data\n            console.log(curr_tables)\n\n            //sets status and drinks based on corresponding table in db\n            curr_tables.map((table) => {\n                tempTables[table.table_num-1].status = table.status\n                tempTables[table.table_num-1].assistance = table.assistance\n                tempTables[table.table_num-1].drinks = table.refills\n            })\n        })\n        //calls to then get orders\n        handleGetOrders(tempTables)\n    }\n\n    //gets all orders from database and sets states\n    const handleGetOrders = async (tempTables) => {\n        await api.getAllOrders().then(orders => {\n            const curr_orders = orders.data.data\n            console.log(curr_orders)\n\n\n            curr_orders.map((order) => {\n                let tableNum = order.table-1        //table number corresponding to the order\n\n                //add order to table if it's in the kitchen\n                if(order.status === \"Created\" || order.status === \"Cooking\" || order.status === \"Ready\" || order.status === \"Delivered\") {\n                    tempTables[tableNum].orders = [...tempTables[tableNum].orders, order]\n                }\n            })\n\n            //set states to temps\n            setTables(tempTables)\n        })\n    }\n\n    //updates database\n    const handleUpdateOrder = async (payload) => {\n        await api.updateOrder(payload._id, payload)\n    }\n\n    const handleUpdateTable = async (payload) => {\n        await api.updateTable(payload.table_num, payload)\n    }\n\n    //sets table and tableNum based on selected table button\n    const handleSetTableVals = ({target}) => {\n        if (target.dataset.index) {                  //ensures index is not undefined\n            setTableNum(() => target.dataset.index);\n            setTable(() => tables[target.dataset.index - 1]);\n        }\n    }\n\n    //handles table modal button\n    const [tableShow, setTableShow] = useState(false);\n    const handleTableClick = ({target}) => {        //when a table button is clicked\n        handleSetTableVals({target});\n        setTableShow((prev) => !prev);  //toggles table modal\n    };\n\n    //handles order modal button\n    const [orderShow, setOrderShow] = useState(false);\n    const handleOrderClick = ({target}) => {        //when the show order button is clicked\n        handleSetTableVals({target})\n\n        setTableShow((prev) => !prev);  //toggles table modal\n        setOrderShow((prev) => !prev);  //toggles order modal\n    };\n\n    //handles \"Complete Request\" button\n    const handleCompleteClick = () => {\n        if(table.status === \"Order Ready\"){\n            table.orders.map((order, index) => {\n                if(order.status === \"Ready\"){\n                    if(order.subtotal === 0)\n                        order.status = \"Paid\"       //sets order status to paid if order's cost is $0.00\n                    else\n                        order.status = \"Delivered\"  //sets order status to delivered\n\n                    handleUpdateOrder(order)        //updates db\n\n                    //change state\n                    let tempOrders = [...table.orders]\n                    tempOrders.splice(index, 1)\n                    let tempTable = table\n                    tempTable.orders = tempOrders\n                    tempTable.status = \"Occupied\"\n                    setTable(tempTable)\n                }\n            })\n        }\n        else if(table.drinks.length !== 0){\n            let tempTable = table\n            tempTable.drinks = []\n            setTable(tempTable)\n        }\n        else if(table.assistance === true){\n            let tempTable = table\n            tempTable.assistance = false\n            setTable(tempTable)\n        }\n\n        //update database\n        handleUpdateTable({table_num: tableNum, status: \"Occupied\", refills: table.drinks, assistance: table.assistance})\n\n        setTableShow(() => false);\n    };\n\n    //handles \"Remove\" button click (for comping items)\n    const handleRemoveClick = ({target}) => {\n        let order = table.orders[target.dataset.orderindex]\n        let price = order.order_items[target.dataset.itemindex].price\n\n        order.commped[target.dataset.itemindex] = true\n        order.subtotal -= price\n        order.tax -= 0.0825 * price\n        order.total -= 1.085 * price\n\n        handleUpdateOrder(order)      //re-enable when ready\n\n        setOrderShow(() => false);\n        setTableShow(() => true);\n    };\n\n    //shows table's needs, if any\n    function Needs({tableNum}) {\n        if(!tableNum)\n            return <></>\n\n        const table = tables[tableNum - 1];\n        //displays the needs of the table\n        if (table.status === \"Order Ready\") {\n            return(\n                <div>\n                    <p>Order ready to be delivered.</p>\n                </div>\n            )\n        }\n        else if (table.drinks.length !== 0) {\n            return (\n                <div>\n                    Refill requested for:\n                    {table.drinks.map((drink) => (      //lists all drinks that need refills\n                        <p>{drink}</p>\n                    ))}\n                </div>\n            );\n        }\n        else if (table.assistance === true) {\n            return(\n                <div>\n                    <p>Wait staff requested.</p>\n                </div>\n            );\n        }\n        else\n            return null;\n    }\n\n    //sets color of table button\n    let tableColor = \"black\";           //sets to black by default, to show any errors\n    function setColor(curTable) {\n        if(curTable !== undefined) {    //ensures curTable is not undefined\n            const curStatus = curTable.status\n\n            //sets button color based on status\n            if (curStatus === \"Order Ready\")\n                tableColor = \"pink\"\n            else if (curTable.drinks.length !== 0)      //needs refill\n                tableColor = \"lightblue\"\n            else if (curTable.assistance === true)      //needs help\n                tableColor = \"#ffc87c\"        //light orange\n            else if (curStatus === \"Occupied\")\n                tableColor = \"lightgreen\"\n            else\n                tableColor = \"white\"\n        }\n    }\n\n    function setNeeds(curTable) {\n        if(curTable !== undefined) {    //ensures curTable is not undefined\n            const curStatus = curTable.status\n\n            //sets button text based on status\n            if (curStatus === \"Order Ready\")\n                return \"Order Ready\"\n            else if (curTable.drinks.length !== 0)      //needs refill\n                return \"Refill\"\n            else if (curTable.assistance === true)      //needs help\n                return \"Assistance Requested\"\n            else if (curStatus === \"Occupied\")\n                return \"Occupied\"\n            else\n                return \"Available\"\n        }\n    }\n\n    return (\n        <div className=\"lobby\">\n            <p className=\"lobby-title\">Lobby</p>\n            {tables.map((table, index) => (\n                <>\n                    {setColor(table)}\n                    <button className='tableButton' data-index={index+1} onClick={handleTableClick} style={{background: tableColor}}>\n                        Table {index+1}\n                        <br />\n                        {setNeeds(table)}\n                    </button>\n                </>\n            ))}\n            <Modal show={tableShow}>\n                <button onClick={handleTableClick}>X</button>\n                <button className='orderButton' onClick={handleOrderClick} disabled={!table.orders[0]} >Show Order</button>\n                <p>\n                    Table {tableNum}\n                </p>\n                <Needs tableNum={tableNum}/>\n                <button onClick={handleCompleteClick} disabled={!(table.status === \"Order Ready\" || table.drinks.length !== 0 || table.assistance)}>Complete Request</button>\n            </Modal>\n            <Modal show={orderShow}>\n                <button onClick={handleOrderClick}>X</button>\n                <p>Table {tableNum} Order</p>\n                {table.orders.map((order, orderIndex) => (\n                    order.order_items.map((item, itemIndex) => (\n                        <p>\n                            {item.name}, ${item.price}\n                            <button data-orderindex={orderIndex} data-itemindex={itemIndex} disabled = {order.commped[itemIndex]} onClick={handleRemoveClick}>Remove</button>\n                        </p>\n                    ))\n                ))}\n            </Modal>\n        </div>\n    );\n};","import React, {useState, useEffect} from 'react';\nimport './KitchenView.css'\nimport api from \"../../api\";\n\nexport default function KitchenView (){\n    const [orderQueue, setOrderQueue] = useState([]);       //array of orders in the inactive queue\n    const [actives, setActives] = useState([]);             //array of orders in the active list\n    const [itemWorking, setItemWorking] = useState([[]]);   //array for checking if an item is done\n\n    useEffect(() => {\n        handleGetOrders()\n        const intervalId = setInterval(() => {\n            handleGetOrders()\n        }, 10000);\n\n        return () => {\n            clearInterval(intervalId);\n        };\n    }, []);\n\n    //gets orders from the db\n    const handleGetOrders = async () => {\n        await api.getAllOrders().then(orders => {\n            const curr_orders = orders.data.data\n            console.log(curr_orders)\n            let tempActives = []\n            let tempQueue = []\n            let tempWorking = []\n            let tempItemWorking = []\n\n            curr_orders.map((order) => {\n                if (order.status === \"Created\") {\n                    tempQueue = [...tempQueue, order]           //adds orders to the inactive queue\n                }\n                else if (order.status === \"Cooking\") {\n                    tempActives = [...tempActives, order]       //adds orders to active list\n                    order.order_items.map(() => {\n                        tempWorking = [...tempWorking, \"working\"]   //adds \"working\" to itemWorking, equal to the number of items in each order\n                    })\n                    tempItemWorking = [...tempItemWorking, tempWorking]\n                    tempWorking = []\n                }\n            })\n\n            //set states to temps\n            setActives(tempActives)\n            setOrderQueue(tempQueue)\n            setItemWorking(tempItemWorking)\n        })\n    }\n\n    const handleUpdateOrder = async (payload) => {      //updates order in database\n        await api.updateOrder(payload._id, payload)\n    }\n    const handleUpdateTable = async (table_num) => {    //updates table in database\n        await api.updateTable(table_num, {table_num: table_num, status: \"Order Ready\", refills: [], assistance: false})\n    }\n\n    const clickToActive = ({target}) => {\n        //adds order to active\n        const index = target.value\n        orderQueue[index].status = \"Cooking\"\n        setActives((prev) => prev.concat(orderQueue[index]))\n\n        //updates database\n        handleUpdateOrder(orderQueue[index])\n\n        //removes order from inactive\n        let temp = [...orderQueue]\n        temp.splice(index, 1)\n        setOrderQueue(() => temp)\n    }\n\n    const clickToReady = ({target}) => {\n        const index = target.value\n        actives[index].status = \"Ready\"\n\n        //updates database\n        handleUpdateOrder(actives[index])\n        handleUpdateTable(actives[index].table)\n\n        //removes order from active\n        let temp = [...actives]\n        temp.splice(index, 1)\n        setActives(() => temp)\n\n        //removes corresponding itemWorking array\n        let tempWorking = [...itemWorking]\n        tempWorking.splice(index, 1)\n        setItemWorking(() => tempWorking)\n    }\n\n    const getTime = (creationTime) => {\n        const time = new Date(creationTime)     //gets Date based on when order was created\n        const hours = time.getHours()\n        const minutes = time.getMinutes()\n        const seconds = time.getSeconds()\n        //converts Date to 24 hour clock, adds leading zeros if needed\n        return ((hours < 10 ? '0' : '') + hours) + \":\" + ((minutes < 10 ? '0' : '') + minutes) + \":\" + ((seconds < 10 ? '0' : '') + seconds)\n    }\n\n    return (\n        <div className='kitchen'>\n            <p className='kitchen-title'>Kitchen</p>\n            <section className=\"order-queue\">\n                <h1 className=\"queue-title\">Queue</h1>\n                {orderQueue.map((order, index) => (\n                    <p>\n                        <button value={index} className=\"queue-button\" onClick={clickToActive}>\n                            Table {order.table}\n                            <br/>\n                            {getTime(order.createdAt)}\n                        </button>\n                    </p>\n                ))}\n            </section>\n            <section className=\"active-orders\">\n                <h1>Active</h1>\n                {actives.map((order, activesIndex) => (\n                    <section className=\"order\">\n                        <h3 className=\"order-table\">Table {order.table}</h3>\n                        {order.order_items.map((item, itemIndex) => (\n                            <div className=\"item\">\n                                <p className=\"item-name\">\n                                    &emsp;&nbsp;\n                                    {item.name}\n                                </p>\n                                <p className=\"item-comments\">&emsp;&emsp;-{actives[activesIndex].comments[itemIndex]}</p>\n                                <br/>\n                            </div>\n                        ))}\n                        <br/>\n                        <p className=\"order-time\">{getTime(order.createdAt)}</p>\n                        <button value={activesIndex} className=\"ready-button\" onClick={clickToReady}>Ready</button>\n                    </section>\n                ))}\n            </section>\n        </div>\n    );\n}","import React from 'react';\nimport Clock from 'react-live-clock';\nimport Moment from 'react-moment';\n\nimport 'moment-timezone';\nimport \"./Clock.css\";\n\nexport default function Time(){\n    return(\n        <div className=\"Time\">\n            <h3>Current Time:{\" \"}\n            <Clock className=\"clock-display\" format={'HH:mm:ss'} ticking={true} />\n            </h3> \n       </div>\n    );\n}","import React from 'react';\n\nimport \"./ChangeLog.css\";\n\nexport default function ChangeLog(){\n    return(\n        <div className=\"ChangeLog\">\n            <h1>Change Log</h1>\n            <div className=\"logDisplay\">\n                \n            </div>\n        </div>\n    );\n}","import React, {useState} from 'react';\nimport TimeField from 'react-simple-timefield';\n\n\nimport \"./ConsumerSettings.css\";\n\nexport default function ConsumerSettings(){\n    const [startTime, setStartTime] = useState(\"0\");\n    const [endTime, setEndTime] = useState(\"0\");\n\n\n    const changeStartTime=(time)=>{\n        this.setStartTime({time});\n    } \n\n    const changeEndTime=(time)=>{\n        this.setEndTime({time});\n    }\n\n    return(\n        <div className=\"ConsumerSettings\">\n            <h1>Consumer Settings</h1>\n            <p>Adjust the time orders will be accepted</p>\n            <div>\n                {/*Starting Time: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <TimeField value={startTime} onChange={this.changeStartTime} />\n                <input id=\"txtStartTime\" type=\"text\" name=\"startTime\" placeholder=\"Enter Start Time\" />\n                <button className=\"save-btn\" onClick=\"saveStart()\">Save</button>           \n            </div>\n            <p></p>\n            <div>\n                Ending Time: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <input id=\"txtEndTime\" type=\"text\" name=\"endTime\" placeholder=\"Enter End Time\"/>\n                <button className=\"save-btn\" onClick=\"saveEnd()\">Save</button>*/}\n            </div>\n        </div>\n    );\n}","import React, {useState, useEffect} from 'react';\n\nimport \"./DailySalesReport.css\";\nimport api from \"../../../../api\";\n\n//dictionary for manu id and the amount purchased\nconst taco1 = { menu_id: 'Taco 1', price: 10.00, amountPurchased: 12, itemProfit: 0.0}\nconst taco2 = {menu_id: 'Taco 2', price: 7.99, amountPurchased:3, itemProfit: 0.0}\nconst tacotaco = {menu_id: 'TacoTaco', price: 13.99, amountPurchased:20, itemProfit: 0.0}\nconst dictionary = { menu_id: 0, price: 0.00, amountPurchased: 0, itemProfit: 0.0}\n//const currDate = new Date();\n\n//temp array for dsr for menu information\nlet DSR = []\n\n\nexport default function DailySalesReport(){\n    const [dailySales, setDailySales] = useState(DSR);\n    const [dailySale, setDailySale] = useState({dict: dictionary});\n    const [ItemProfit, setItemProfit] = useState(0);\n    const [count, setCount] = useState(0);\n\n    const handleDailySales = ({target}) => {\n        if (target.dataset.index) {                  //ensures index is not undefined\n            setItemProfit(() => (this.dict.price * this.dict.amountPurchased));\n            setDailySale(() => dailySales[target.dataset.index - 1]);\n        }\n    }\n\n    let totalProfit = 0.00; //the total found\n    function setProfit(curDS){\n        if(curDS !== undefined){\n            //initially profit is set to $0.00, to show any errors\n            let profit = (curDS.dict.price * curDS.dict.amountPurchased);\n            totalProfit = totalProfit + profit;\n        } \n    }\n\n    let offset=0;\n    function adjustOffset(number){\n        offset = offset + number;\n    }\n\n    let current = new Date();\n    function setDate(index){\n        const date = '${current.getDate()}/${current.getMonth()+1}/${current.getFulYear()}';\n       if(index>0)\n       {\n            //if((current.getDate() - index) > 0)\n       }\n       current = date;\n    }\n\n    let totalItemsSold = 0;\n    \n\n    return(\n        <div className=\"DSR\">\n            <h1>DSR</h1>\n            <div className=\"DSR-visual\">\n                <h3 className=\"header\">Item&emsp;&emsp;&emsp;|&emsp;&ensp;Qty&ensp;&emsp;|&emsp;&ensp;Price&ensp;&emsp;|&emsp;&emsp;Total Profit&ensp;</h3>\n                <div className=\"body\">\n                    { dailySales.map((dailySale, index) =>\n                        <>\n                            {setProfit(dailySale)}\n                                \n                                \n                        </>\n                        \n                    )}\n                </div>\n            </div>\n            <div className=\"DSR-date\">\n                <p>Date:<br/>\n                    <p className=\"block\">\n                        TIME\n                    </p>    \n                </p>\n                <p >Number of Items Ordered:<br/>\n                    <p className=\"block\">\n\n                    </p>\n                </p>\n                <p >Total Profit:<br/>\n                    <p className=\"block\">\n                        ${totalProfit}\n                    </p>\n                </p>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\n\nimport TableView from \"../../LobbyView\"\n\nexport default function LobbyVisual(){\n    return(\n        <div>\n            <TableView style={{ transform: \"scale(0.5, 0.5)\"}}/>\n        </div>\n        \n    );\n}","import React from'react';\nimport {Link} from 'react-router-dom';\n\nimport \"../ManagerView/MgrNavbar.css\"\n\nexport default function NavBar(){\n\n    return(\n        <nav className=\"MgrNavbarTabs\">\n            <ul className= 'mgr-nav-tab'>\n                <li class=\"mgr-nav-link\"><Link className=\"mgr-tab-text\" to=\"/ConsumerSettings\">Consumer Settings</Link></li>\n                <li class=\"mgr-nav-link\"><Link className=\"mgr-tab-text\" to=\"/DailySalesReport\">DSR</Link></li>\n                <li class=\"mgr-nav-link\"><Link className=\"mgr-tab-text\" to=\"/ChangeLog\">Change Log</Link></li>\n                <li class=\"mgr-nav-link\"><Link className=\"mgr-tab-text\" to=\"/LobbyView\">Lobby View</Link></li>\n            </ul>\n        </nav>\n    );\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Link} from 'react-router-dom';\n\n//import ManagerLogin from './tabs/ManagerLogin';\nimport Time from \"../Clock\"\nimport ChangeLog from './tabs/ChangeLog';\nimport ConsumerSettings from './tabs/ComsumerSettings';\nimport DailySalesReport from './tabs/DailySalesReport';\nimport LobbyVisual from './tabs/LobbyView';\nimport Navbar from './Navbar';\n\nimport './ManagerView.css';\n\n{/*manager page hub*/}\nexport default function ManagerView (){\n    return (\n        <>\n        <div className='manager'> \n           <Router>\n               <Time />\n                <div className='manager-title'>Manager</div>\n                <div className='manager-body'>\n                        {/*manager log in page*/}\n\n                    <Navbar/>\n                        {/*Consumer Settings*/}\n                        <Route exact path=\"/ConsumerSettings\" component={ConsumerSettings}  />     \n                        {/*DailySalesReport*/}\n                        <Route exact path=\"/DailySalesReport\" component={DailySalesReport} />  \n                        {/*Change Log */}\n                        <Route exact path=\"/ChangeLog\" component={ChangeLog}  />  \n                        {/*Lobby View*/}\n                        <Route exact path=\"/LobbyView\" component={LobbyVisual}  />  \n                </div>\n\n            </Router>\n        </div>\n        </>\n    );\n}","import React from \"react\"\nimport apis from \"../../../../api\"\nimport Modal from \"../../../Modal\"\n\nlet payload = {\n    order_id: '',\n    paymentReady: false,\n}\n\nexport const preparePayment = (id) => {\n    payload.order_id = id\n    payload.paymentReady = true\n}\n\nconst PaymentItem = ({item, comp}) => {\n    if(comp)\n    {\n        return (\n            <div>\n                <p>{item.name} 0.00</p>\n            </div>\n        )\n    }\n    return (\n        <div>\n            <p>{item.name} {item.price}</p>\n        </div>\n    )\n}\n\nexport default class PaymentView extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            order_id: '',\n            order: {},\n            paymentReady: false,\n            cardModal: false,\n            modal_2: 0,\n            freeDessert: 0,\n        }\n    }\n\n    componentDidMount = async () => {\n        await apis.getOrder(payload.order_id).then(order =>{\n            if(order.data.data.status === 'Delivered')\n            {\n                this.setState({\n                    order: order.data.data,\n                    paymentReady: true,\n                    modal_2: 0\n                })\n            }\n        }).catch(err => {\n            this.setState({\n                paymentReady: false,\n                modal_2: 0\n            })\n        })\n\n        console.log(this.state)\n    }\n\n    cardModal = () =>\n    {\n        if(this.state.modal_2 === 0)\n        {\n            return(\n                <Modal show={this.state.cardModal}>\n                    <button onClick={this.cardPaymentHandler}>X</button>\n                    <p>Please insert Card</p>\n                    <button onClick={() => {this.tipModalHandler(1)}}>Insert Card</button>\n                </Modal>\n            )\n        }\n        else if(this.state.modal_2 === 1)\n        {\n            return(\n                <Modal show={this.state.cardModal}>\n                    <button onClick={this.cardPaymentHandler}>X</button>\n                    <h1>Select your tip</h1>\n                    <button onClick={() => {this.tipHandler(0.1)}}>10% tip</button>\n                    <button onClick={() => {this.tipHandler(0.15)}}>15% tip</button>\n                    <button onClick={() => {this.tipHandler(0.2)}}>20% tip</button>\n                    <input type='number' onChange={this.handleCustomTipValue}/>\n                    <button>Submit Custom Tip</button>\n                </Modal>\n            )\n        }\n        else if(this.state.modal_2 === 2)\n        {\n            return(\n                <Modal show={this.state.cardModal}>\n                    <h1>You Paid ${this.state.order.total.toFixed(2)}</h1>\n                    <h1>Time for a chance to win a free dessert!</h1>\n                    {this.freeDessertHandler()}\n\n                </Modal>\n            )\n        }\n\n    }\n\n    /*\n    *********\n    DESSERT HANDLING\n    *********\n    */\n    freeDessertHandler = () => {\n\n        if(this.state.freeDessert === 0)\n        {\n            return(\n                <button onClick={this.dessertRandomizer}>Click for a chance to win!</button>\n            )\n        }\n        else if(this.state.freeDessert === 1)\n        {\n            return(\n                <>\n                <h1>Congrats! You Won!</h1>\n                <h1>Please select a dessert from the list below!</h1>\n                </>\n            )\n        }\n        else if(this.state.freeDessert === 2)\n        {\n            return(\n                <>\n                    <h1>Sorry! You Did Not Win!</h1>\n                    <h1>Thanks for Visiting Taco Palace</h1>\n                    <button>Complete Order</button>\n                </>\n            )\n        }\n    }\n\n    dessertRandomizer = () => {\n        if(Math.random() <= 0.33)\n        {\n            this.setState({freeDessert: 1})\n        }\n        else\n        {\n           this.setState({freeDessert: 2})\n        }\n    }\n\n\n\n    /*\n    *********\n    TIP HANDLING\n    *********\n    */\n    tipHandler = async (tipPerc) => {\n        let temp = this.state.order\n        temp.tip = temp.total * tipPerc\n        temp.total = temp.total + temp.tip\n        temp.status = 'Paid'\n        this.setState({order: temp})\n\n        await apis.updateOrder(temp._id,temp).then(res =>\n            this.tipModalHandler(2)\n        )\n        console.log(this.state)\n    }\n\n    tipModalHandler = (state) => {\n        this.setState({modal_2: state})\n    }\n\n    handleCustomTipValue = async event => {\n\n    }\n\n\n\n    cardPaymentHandler = () =>\n    {\n        this.setState(prevState => ({cardModal: !prevState.cardModal}))\n    }\n\n    paymentStatusHandler = () => {\n        if(!this.state.paymentReady)\n        {\n            return (\n                <>\n                <h1>No order placed</h1>\n                <h1>Go place an order!</h1>\n                </>\n            )\n        }\n        else\n        {\n            return (\n                <div>\n                    {this.state.order.order_items.map((item_test,index) => (\n                        <div>\n                            <PaymentItem key={index} item={item_test} comp={this.state.order.commped[index]} />\n                        </div>\n                    ))\n                    }\n                    <h1>Subtotal: {this.state.order.subtotal.toFixed(2)}</h1>\n                    <h1>Tax: {(this.state.order.subtotal * 0.0825).toFixed(2)}</h1>\n                    <h1>Total: {this.state.order.total.toFixed(2)}</h1>\n                    <button onClick={this.cardPaymentHandler}>Pay with Card</button>\n                    <button>Pay with Cash</button>\n                    <button>Split Check</button>\n                </div>\n\n            )\n        }\n    }\n\n    render() {\n        return (\n            <>\n            <h1>Payment</h1>\n            {this.paymentStatusHandler()}\n            {this.cardModal()}\n            </>\n        )\n    }\n\n\n}","import React from \"react\";\nimport apis from \"../../../../api\";\nimport {preparePayment} from \"./PaymentView\";\n\nlet payload = {\n    items: [],\n    comments: [],\n    commped: [],\n    subtotal: 0.00,\n    tip: 0,\n    total: 0,\n    status: 'Waiting',\n    table: 8\n}\n\nexport const freeDessertOrder = (dessert) =>\n{\n    \n}\n\nexport const getItems = () => {\n    return payload.items\n}\n\nexport const updateTableNum = (num) => {\n    payload.table = num\n}\n\nexport const getTableNum = () => {\n    return payload.table\n}\n\nexport const handleAddToOrder = (item, comment) => {\n    if(payload.status === 'Waiting')\n    {\n        payload.items.push(item._id)\n        payload.comments.push(comment)\n        payload.commped.push(false)\n    }\n    console.log(payload)\n}\n\nconst OrderItem = ({item, comment, comp}) => {\n    if(comp)\n    {\n        return (\n            <div>\n                <p>{item.name} 0.00</p>\n                <p>{comment}</p>\n            </div>\n        )\n    }\n    return (\n        <div>\n            <p>{item.name} {item.price}</p>\n            <p>{comment}</p>\n        </div>\n    )\n\n\n}\n\n\n\nexport default class OrderView extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            items: [],\n            comments: [],\n            commped: [],\n            subtotal: 0,\n            tax: 0,\n            total: 0,\n            status: '',\n            table: 0\n        }\n    }\n\n    componentDidMount = async () =>{\n        payload.items.map((item, index) => {\n            apis.getItemById(item).then(item_info => {\n                this.setState(prevState => ({\n                    items: [...prevState.items, item_info.data.data],\n                    comments: [...prevState.comments,payload.comments[index]],\n                    commped: [...prevState.commped,payload.commped[index]],\n                    subtotal: prevState.subtotal + item_info.data.data.price\n                }))\n                this.setState({\n                    tax: this.state.subtotal * 0.0825,\n                    total: this.state.subtotal * 1.0825,\n                })\n            })\n        })\n    }\n\n    handleRemoveFromOrder = (item) => {\n        let arr = [...this.state.items]\n        let comms = [...this.state.comments]\n        let comp = [...this.state.commped]\n        let index = arr.indexOf(item)\n        if(index !== -1)\n        {\n            arr.splice(index,1)\n            comms.splice(index,1)\n            comp.splice(index,1)\n            payload.items.splice(payload.items.indexOf(item._id),1)\n            payload.comments.splice(payload.items.indexOf(item._id),1)\n            payload.commped.splice(payload.items.indexOf(item._id), 1)\n            this.setState(prevState => ({\n                items: arr,\n                comments: comms,\n                commped: comp,\n                subtotal: prevState.subtotal - item.price\n            }))\n            this.setState(prevState => ({\n                tax: prevState.subtotal * 0.0825,\n                total: prevState.subtotal * 1.0825\n            }))\n        }\n\n    }\n\n    OrderStatusHandler = () => {\n\n        if(payload.status === 'Waiting')\n        {\n            return(\n                <button onClick={this.placeOrderHandler}>Place Order</button>\n            )\n        }\n        else if(payload.status === 'Created')\n        {\n            return(\n                <h1>Order Placed! Ready for Payment</h1>\n            )\n        }\n\n    }\n\n    EditRemoveButtons = (item_test) => {\n        if(payload.status === 'Waiting')\n        {\n            return(\n                <button onClick={() => this.handleRemoveFromOrder(item_test)}>X</button>\n            )\n        }\n        else if(payload.status === 'Created')\n        {\n            return null;\n        }\n    }\n\n    placeOrderHandler = async () => {\n        //set up order payload and submit\n        payload.status = 'Created'\n        this.setState({status: 'Created'})\n        const { items, comments, commped, subtotal, total,  } = this.state\n        const final_payload = { order_items:items, comments, commped, subtotal, total, status:'Created', table:payload.table }\n        await apis.createOrder(final_payload).then(res => {\n            window.alert(`Order created successfully`)\n            preparePayment(res.data.id)\n        })\n    }\n\n\n    render() {\n    return(\n        <div>\n            <h1>Your Order</h1>\n            <div>\n                {this.state.items.map((item_test,index) => (\n                    <div>\n                    <OrderItem key={index} item={item_test} comment={this.state.comments[index]} comp={this.state.commped[index]} />\n                        {this.EditRemoveButtons(item_test)}\n\n                    </div>\n                ))\n                }\n            </div>\n            <h1>Subtotal: ${this.state.subtotal.toFixed(2)}</h1>\n            {this.OrderStatusHandler()}\n        </div>\n\n        )\n    }\n\n}","import React, {useState, useRef} from'react';\nimport {Link} from 'react-router-dom';\nimport {updateTableNum, getTableNum, getItems} from './tabs/OrderView'\nimport Modal from '../../Modal'\nimport \"../CustomerView/Navbar.css\"\nimport api from \"../../../api\"\n\nexport default function NavBar(){\n    //returns value of current table\n    const handleGetTable = async () => {\n        return await api.getTableByNum(getTableNum())\n    }\n    //updates database with a new table\n    const handleUpdateTable = async (table) => {\n        await api.updateTable(table.table_num, table)\n    }\n\n    const [drinks, setDrinks] = useState([])                            //all drinks in the current order\n    const [showModalRefills, setShowModalRefills] = useState(false)     //boolean for refills modal\n    const [disableRefills, setDisableRefills] = useState([])            //boolean array for if refills have already been ordered\n\n    const handleClickModalRefill = () => {      //when the refill button is clicked\n        setShowModalRefills(true)   //show modal\n        setDrinks([])\n\n        //adds all drinks from order to drinks array\n        const items = getItems()\n        items.map(item => {\n            api.getItemById(item).then(dbItem => {\n                if(dbItem.data.data.category === \"drinks\") {\n                    setDrinks(prev => [...prev, dbItem.data.data])\n                }\n            })\n        })\n\n        //initializes disableRefills to an array of falses of length = drinks.length\n        let temp = []\n        for(let i = 0; i < drinks.length; i++) {\n            temp = [...temp, false]\n        }\n        setDisableRefills(temp)\n    }\n\n    const [refills, setRefills] = useState([])      //array of which drinks are getting refilled\n    const handleClickRefill = ({target}) => {   //when a refill is asked for a drink\n        //updates disableRefills\n        let temp = [...disableRefills]\n        temp[target.value] = true\n        setDisableRefills(temp)\n\n        setRefills(prev => [...prev, drinks[target.value].name])    //updates refills\n    }\n\n    const refillModalX = () => {        //when the refill modal is exited\n        setShowModalRefills(false)//close refills modal\n\n        //update table to notify lobby of refill request\n        handleGetTable().then((table) => {\n            let new_table = table.data.data\n            new_table.refills = refills\n            setRefills([])\n            handleUpdateTable(new_table).then()\n        })\n    }\n\n    const handleClickHelp = () => {     //when the assistance button is clicked\n        //update table to notify lobby of help request\n        handleGetTable().then((table) => {\n            let new_table = table.data.data\n            new_table.assistance = true\n            handleUpdateTable(new_table)\n        })\n    }\n\n    const [showModalTableNums, setShowModalTableNums] = useState(false)\n    const handleClickTable = () => {    //when the change table button is clicked\n        setShowModalTableNums((prev) => !prev)  //toggle change table modal\n    }\n\n    const handleClickNum = (tableNum) => {  //when a number is selected within the change table modal\n        updateTableNum(tableNum)            //update the table number\n        setShowModalTableNums(false)  //close change table modal\n    }\n\n    const tableNums = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]  //array of all table numbers\n    return(\n        <>\n            <nav className=\"CstNavbarTabs\">\n                <ul className= 'cst-nav-tab'>\n                    <li><button className=\"cst-nav-button\" onClick={handleClickModalRefill}>Refills</button></li>\n                    <li><button className=\"cst-nav-button\" onClick={handleClickHelp}>Call Staff</button> </li>\n                    <li className=\"cst-nav-link\"><Link className=\"cst-tab-text\" to=\"/Rewards\">Rewards</Link></li>\n                    <li className=\"cst-nav-link\"><Link className=\"cst-tab-text\" to=\"/Menu\">Menu</Link></li>\n                    <li className=\"cst-nav-link\"><Link className=\"cst-tab-text\" to=\"/Order\">Order</Link></li>\n                    <li className=\"cst-nav-link\"><Link className=\"cst-tab-text\" to=\"/Payment\">Payment</Link></li>\n                    <li className=\"cst-nav-link\"><Link className=\"cst-tab-text\" to=\"/KidsCorner\">Kids Corner</Link></li>\n                    <li><button className=\"cst-nav-button\" onClick={handleClickTable}>Change table</button> </li>\n                </ul>\n                <label className=\"cst-table\">Table: {getTableNum()}</label>\n            </nav>\n            <Modal show={showModalTableNums}>\n                <button onClick={handleClickTable} className=\"x-button\">X</button>\n                <br/>\n                {tableNums.map(tableNum => (\n                    <button onClick={() => handleClickNum(tableNum)} className=\"table-num-button\">{tableNum}</button>\n                ))}\n            </Modal>\n            <Modal show={showModalRefills}>\n                <button onClick={refillModalX} className=\"x-button\">X</button>\n                <br/>\n                {drinks.map((drink, index) => (\n                    <>\n                        <button onClick={handleClickRefill} value={index} disabled={disableRefills[index]}>{drink.name}</button>\n                        <br/>\n                    </>\n                ))}\n            </Modal>\n        </>\n    );\n}","import React, {useEffect, useState} from \"react\";\nimport api from \"../../../../api\";\nimport {handleAddToOrder} from \"./OrderView\"\nimport './MenuView.css'\nimport Modal from \"../../../Modal\";\n\nlet menu_items = [];\n\n\n\nexport const Item = ({item}) => {\n\n    const [customItem, showCustomItem] = useState(false);\n    let comment = \"\"\n\n    const handleCommentField = (e) => {\n        comment = e.target.value\n    }\n\n    return(\n    <>\n        <Modal show={customItem}>\n            <button onClick={() => showCustomItem(!customItem)} className=\"x-button\">X</button>\n            <div>\n                <p>{item.name}</p>\n                <p>{item.price}</p>\n                <ul>\n                    {item.ingredients.map((ingredient, index) =>\n                        <li key={index}>{ingredient}</li>\n                    )}\n                </ul>\n                <form>\n                    <label>Comments:</label>\n                    <input type = \"text\" onChange={handleCommentField}/>\n                </form>\n                <button onClick={() => {\n                    handleAddToOrder(item, comment);\n                    showCustomItem(!customItem);\n                }}>Add to Order</button>\n\n            </div>\n        </Modal>\n        <div className={\"item-display\"}>\n            <div>\n                <p>{item.name}</p>\n                <p>{item.price}</p>\n                <ul>\n                    {item.ingredients.map((ingredient, index) =>\n                        <li key={index}>{ingredient}</li>\n                    )}\n                </ul>\n                <button onClick={() => handleAddToOrder(item, \"\")}>Add to Order</button>\n                <button onClick={() => showCustomItem(!customItem)}>Customize</button>\n            </div>\n        </div>\n    </>\n    )\n}\n\n\nfunction DropMenu({show, children}) {\n    if(!show)\n        return null;\n\n    return(\n        <div className={\"grid-display\"}>\n            {children}\n        </div>\n    );\n}\n\nexport default function MenuView(){\n\n    useEffect(() => {\n        handleGetItems()\n    }, []);\n\n\n    const handleGetItems = async () => {\n        await api.getAllItems().then(items => {\n            menu_items = items.data.data\n        })\n\n        console.log(menu_items)\n    }\n\n    const [showEntrees, setShowEntrees] = useState(false);\n    const handleEntreesClick = () => {\n        setShowEntrees((prev) => !prev);\n    }\n\n    //Appetizers\n    const [showAppetizers, setShowAppetizers] = useState(false);\n    const handleAppetizersClick = () => {\n        setShowAppetizers((prev) => !prev);\n    }\n\n    //Sides\n    const [showSides, setShowSides] = useState(false);\n    const handleSidesClick = () => {\n        setShowSides((prev) => !prev);\n    }\n\n    //Kids\n    const [showKids, setShowKids] = useState(false);\n    const handleKidsClick = () => {\n        setShowKids((prev) => !prev);\n    }\n\n    //Desserts\n    const [showDesserts, setShowDesserts] = useState(false);\n    const handleDessertsClick = () => {\n        setShowDesserts((prev) => !prev);\n    }\n\n    //Drinks\n    const [showDrinks, setShowDrinks] = useState(false);\n    const handleDrinksClick = () => {\n        setShowDrinks((prev) => !prev);\n    }\n\n    return(\n\n        <div className={\"full-menu-box\"}>\n            <div className={\"menu-box\"}>\n                <h1>Menu</h1>\n                    <button onClick={handleAppetizersClick}>Appetizers</button>\n                    <DropMenu show={showAppetizers}>\n                        {\n                            menu_items.map((item, index) => {\n                                if(item.category === 'appetizers')\n                                {\n                                    return(<Item\n                                        key={index}\n                                        item={item}\n                                    />)\n                                }\n                                else\n                                    return null;\n                            })\n                        }\n                    </DropMenu>\n                    <button onClick={handleEntreesClick}>Entrees</button>\n                    <DropMenu show={showEntrees}>\n                        {\n                            menu_items.map((item, index) => {\n                                if(item.category === 'entrees')\n                                {\n                                    return(\n                                        <Item key={index} item={item}/>\n                                        )\n                                }\n                                else\n                                    return null;\n                            })\n                        }\n                    </DropMenu>\n                    <button onClick={handleSidesClick}>Sides</button>\n                    <DropMenu show={showSides}>\n                        {\n                            menu_items.map((item, index) => {\n                                if(item.category === 'sides')\n                                {\n                                    return(<Item\n                                        key={index}\n                                        item={item}\n                                    />)\n                                }\n                                else\n                                    return null;\n                            })\n                        }\n                    </DropMenu>\n                    <button onClick={handleKidsClick}>Kids Meals</button>\n                    <DropMenu show={showKids}>\n                        {\n                            menu_items.map((item, index) => {\n                                if(item.category === 'kids')\n                                {\n                                    return(<Item\n                                        key={index}\n                                        item={item}\n                                    />)\n                                }\n                                else\n                                    return null;\n                            })\n                        }\n                    </DropMenu>\n                    <button onClick={handleDessertsClick}>Desserts</button>\n                    <DropMenu show={showDesserts}>\n                        {\n                            menu_items.map((item, index) => {\n                                if(item.category === 'desserts')\n                                {\n                                    return(<Item\n                                        key={index}\n                                        item={item}\n                                    />)\n                                }\n                                else\n                                    return null;\n                            })\n                        }\n                    </DropMenu>\n                    <button onClick={handleDrinksClick}>Drinks</button>\n                    <DropMenu show={showDrinks}>\n                        {\n                            menu_items.map((item, index) => {\n                                if(item.category === 'drinks')\n                                {\n                                    return(<Item\n                                        key={index}\n                                        item={item}\n                                    />)\n                                }\n                                else\n                                    return null;\n                            })\n                        }\n                    </DropMenu>\n            </div>\n        </div>\n    );\n}","import './CustomerView.css'\nimport api from '../../../api'\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Time from \"../Clock\";\nimport Navbar from \"./Navbar\";\nimport React, {useState} from \"react\";\nimport Modal from \"../../Modal\";\n\n\nimport MenuView from \"./tabs/MenuView\";\nimport OrderView from \"./tabs/OrderView\";\nimport PaymentView from \"./tabs/PaymentView\";\n\nexport default function CustomerView() {\n    const [showSignIn, setShowSignIn] = useState(true);\n\n    const handlePassword = () => {\n        setShowSignIn(() => !showSignIn)\n    }\n\n    return (\n        <>\n\n        <div className='customer'>\n            <Router>\n                <Time />\n                <div className='customer-title'>\n                    Customer\n                </div>\n                <div className='customer-body'>\n\n                    <Navbar/>\n                    {/*Consumer Settings*/}\n                    <Route exact path=\"/Rewards\"  />\n                    {/*DailySalesReport*/}\n                    <Route exact path=\"/Menu\" component={MenuView} />\n                    {/*Change Log */}\n                    <Route exact path=\"/Order\" component={OrderView}  />\n                    {/*Lobby View*/}\n                    <Route exact path=\"/Payment\" component={PaymentView}  />\n                </div>\n\n            </Router>\n        </div>\n        </>\n    );\n}","//assitance from: https://www.youtube.com/watch?v=fL8cFqhTHwA\nimport React, {useState, useEffect} from 'react';\nimport { StaffPages, LobbyView, KitchenView, ManagerView, CustomerView} from '../pages/index'\nimport api from '../../api';\nimport './Navbar.css'\n\n//makes modal\nfunction Modal({show, children}) {\n    if (!show)\n        return null;\n\n    return (\n        <div className=\"modal-background\">\n            <section className=\"modal-main-staff\"></section>\n                {children} \n        </div>\n    );\n}\n\nfunction Navbar() {\n    const [clicked, setClicked] = useState(false);\n    const [component, setComponent] = useState(<CustomerView/>);\n    const [showModal, setShowModal] = useState(false);\n    const [employees, setEmployees] = useState([]);\n    const [employee, setEmployee] = useState({ emp_id: ''});\n    const [error, setError] = useState('');\n\n    //get and store all employee info\n    const handleGetLobby = async () => {\n        await api.getEmployees().then(workers => {\n            const all_employees = workers.data.data\n            console.log(all_employees);\n            let tempType = []\n            all_employees.map((worker) => {\n                if(worker.role === \"lobby\"){\n                    tempType = [...tempType, worker]\n                }\n            })\n            //set state to temp\n            console.log(tempType)\n            setEmployees(tempType)\n           //console.log(employees)\n        })\n    }\n        //get and store all employee info\n        const handleGetKitchen = async () => {\n            await api.getEmployees().then(workers => {\n                const all_employees = workers.data.data\n                console.log(all_employees);\n                let tempType = []\n                all_employees.map((worker) => {\n                    if(worker.role === \"kitchen\"){\n                        tempType = [...tempType, worker]\n                    }\n                })\n                //set state to temp\n                console.log(tempType)\n                setEmployees(tempType)\n               //console.log(employees)\n            })\n        }\n\n    //employee login \n    const Login = details => {\n        console.log(details)\n        employees.map((worker) => {\n            //split into two seperate if statements to avoid multiple login errors\n            if(details.emp_id == worker.emp_id){ //if the user name matches \n                handleModal();\n            }\n            else{ \n                setError('Credentials do not match. Please try again.');\n            }\n        })\n        \n        \n    }\n\n    //employee signin\n    const setValue = (variable) => {\n        return({target: {value}}) => {\n            setEmployee( employee => ({...employee, [variable]: value}));\n        }\n    };\n\n    const submitHandler = e => {\n        e.preventDefault(); //prevents duplicate entries\n\n        Login(employee)\n        console.log(error)\n    }\n\n    const handleClick = (e) => {\n        e.preventDefault()              //blocks auto-refresh\n        setClicked(() => !clicked)\n        const view = e.target.name\n\n        //chooses which view to display\n        if(view === \"Lobby\"){\n            setComponent(() => <LobbyView />)\n            handleModal();\n            handleGetLobby();\n        }\n        else if(view === \"Kitchen\"){\n            setComponent(() => <KitchenView />)\n            handleModal();\n            handleGetKitchen();\n        }   \n        else if(view === \"Manager\"){\n            setComponent(() => <ManagerView />)\n        }   \n        else if(view === \"Customer\"){\n            setComponent(() => <CustomerView />)\n            setShowModal(() => false)\n        } \n    }\n\n    const handleModal = () => {\n       setShowModal(() => !showModal)\n    }\n\n    return(\n    \n        <div>\n            <Modal show={showModal}>\n                <form className=\"signin-form\" onSubmit={submitHandler}>\n                <div className='form-inner'>\n                    <h2>Employee Login</h2>\n                    {error}\n                    <div className='form-group'>\n                        <label  htmlFor='empoyee id'>Employee ID:</label>\n                        <input type=\"text\" placeholder=\"Enter Employee ID here\" value={employee.emp_id} onChange={setValue('emp_id')} />\n                    </div>              \n                    <input type='submit' value='LOGIN' />\n                    <br/>\n                    <button name={\"Customer\"} onClick={handleClick} >Back To Customer</button>\n                </div>\n                </form>  \n            </Modal>\n            {component}\n            <nav className=\"NavbarPages\">\n                <h1 className=\"employee-id\">Taco Palace</h1> {/* Still need to add inputed employee id*/}\n                <ul className={clicked ? 'nav-page active' : 'nav-page'}>\n                    {StaffPages.map((item, index) => {\n                        return(\n                            <li key={index}>\n                                <a className={item.cName} href={item.url} name={item.title} onClick={handleClick}>\n                                    {item.title}\n                                </a>\n                            </li>\n                        );\n                    })}\n                </ul>\n            </nav>\n        </div>\n    );\n\n}\n\nexport default Navbar;","import React from 'react'\nimport './App.css'\nimport './index.css'\n\nimport { MenuInsert, MenuList, Navbar } from '../components'\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <div className=\"bg\"/>\n                <Navbar />\n\n\n        </div>\n    );\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}